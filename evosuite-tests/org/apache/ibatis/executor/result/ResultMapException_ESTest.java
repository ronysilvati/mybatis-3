/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 29 19:29:19 GMT 2020
 */

package org.apache.ibatis.executor.result;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.ibatis.executor.result.ResultMapException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultMapException_ESTest extends ResultMapException_ESTest_scaffolding {

  /**
   * COMPREENSÍVEL: Sim
   * DE FÁCIL CRIAÇÃO: Sim
   * IMPORTANTE PARA O CONTEXTO: Sim
   * ----------------------------------------------------------
   * DESCRIÇÃO: O teste em questão verifica se a classe ResultMapException
   * prepara a exceção corretamente a depender se é uma exceção padrão
   * ou com mensagem personalizada.
   * ----------------------------------------------------------
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResultMapException resultMapException0 = new ResultMapException();
      ResultMapException resultMapException1 = new ResultMapException("", resultMapException0);
      assertFalse(resultMapException1.equals((Object)resultMapException0));
  }

  /**
   * COMPREENSÍVEL: Sim
   * DE FÁCIL CRIAÇÃO: Sim
   * IMPORTANTE PARA O CONTEXTO: Sim
   * ----------------------------------------------------------
   * DESCRIÇÃO: O teste em questão verifica se a classe ResultMapException
   * prepara a exceção corretamente ao receber uma mensagem de erro como parâmetro
   * da ResultMapException
   * ----------------------------------------------------------
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResultMapException resultMapException0 = new ResultMapException("9=[y+q-sq9k|3(/0P");
  }

  /**
   * COMPREENSÍVEL: Sim
   * DE FÁCIL CRIAÇÃO: Sim
   * IMPORTANTE PARA O CONTEXTO: Sim
   * ----------------------------------------------------------
   * DESCRIÇÃO: O teste em questão verifica se a classe ResultMapException
   * prepara a exceção corretamente a depender se é uma exceção padrão
   * ou com mensagem personalizada.
   * ----------------------------------------------------------
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResultMapException resultMapException0 = new ResultMapException();
      ResultMapException resultMapException1 = new ResultMapException(resultMapException0);
      assertFalse(resultMapException1.equals((Object)resultMapException0));
  }
}
