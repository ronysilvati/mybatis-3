/*
 * This file was automatically generated by EvoSuite
 * Sat Feb 29 19:37:43 GMT 2020
 */

package org.apache.ibatis.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.ibatis.parsing.GenericTokenParser;
import org.apache.ibatis.parsing.TokenHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GenericTokenParser_ESTest extends GenericTokenParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TokenHandler tokenHandler0 = mock(TokenHandler.class, new ViolatedAssumptionAnswer());
      GenericTokenParser genericTokenParser0 = new GenericTokenParser(":", ":", tokenHandler0);
      String string0 = genericTokenParser0.parse("nWg0h*Iwfz:6_");
      assertEquals("nWg0h*Iwfz:6_", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenericTokenParser genericTokenParser0 = new GenericTokenParser("", "org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler", (TokenHandler) null);
      // Undeclared exception!
      genericTokenParser0.parse("cB Xz$wpp$5");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TokenHandler tokenHandler0 = mock(TokenHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(tokenHandler0).handleToken(anyString());
      GenericTokenParser genericTokenParser0 = new GenericTokenParser("", "", tokenHandler0);
      // Undeclared exception!
      genericTokenParser0.parse("<?S");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TokenHandler tokenHandler0 = mock(TokenHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tokenHandler0).handleToken(anyString());
      GenericTokenParser genericTokenParser0 = new GenericTokenParser("?", "?", tokenHandler0);
      String string0 = genericTokenParser0.parse("H?co?nSbG)b");
      assertEquals("HnullnSbG)b", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TokenHandler tokenHandler0 = mock(TokenHandler.class, new ViolatedAssumptionAnswer());
      GenericTokenParser genericTokenParser0 = new GenericTokenParser("?", "?", tokenHandler0);
      String string0 = genericTokenParser0.parse("org.apache.ibatis.parsing.GenericTokenParser");
      assertEquals("org.apache.ibatis.parsing.GenericTokenParser", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TokenHandler tokenHandler0 = mock(TokenHandler.class, new ViolatedAssumptionAnswer());
      GenericTokenParser genericTokenParser0 = new GenericTokenParser("?", "?", tokenHandler0);
      String string0 = genericTokenParser0.parse("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TokenHandler tokenHandler0 = mock(TokenHandler.class, new ViolatedAssumptionAnswer());
      GenericTokenParser genericTokenParser0 = new GenericTokenParser("?", "?", tokenHandler0);
      String string0 = genericTokenParser0.parse((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GenericTokenParser genericTokenParser0 = new GenericTokenParser("", "", (TokenHandler) null);
      // Undeclared exception!
      try { 
        genericTokenParser0.parse("org.apache.ibatis.parsing.GenericTokenParser");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
